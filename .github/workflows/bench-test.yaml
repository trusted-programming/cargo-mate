name: bench-test
on: [push]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        project:
          [
            commonlibrary_rust_ylong_http,
            commonlibrary_rust_ylong_json,
            commonlibrary_rust_ylong_runtime,
            communication_ipc,
            hiviewdfx_hilog,
            hiviewdfx_hisysevent,
            hiviewdfx_hitrace,
            request_request,
            systemabilitymgr_safwk,
            systemabilitymgr_samgr,
          ]
    steps:
      - name: clone repo
        uses: nick-fields/retry@v3
        with:
          timeout_minutes: 5
          max_attempts: 3
          retry_on: error
          command: git clone https://gitee.com/openharmony/${{ matrix.project }}.git

      - name: Cache Cargo dependencies and binaries
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo
          key: ${{ runner.os }}-cargo-${{ matrix.project }}-v1
          restore-keys: |
            ${{ runner.os }}-cargo-${{ matrix.project }}-v1
            ${{ runner.os }}-cargo-${{ matrix.project }}-
            ${{ runner.os }}-cargo-

      - name: count occurrences before
        working-directory: ./${{ matrix.project }}
        run: |
          curl -o counters.sh https://raw.githubusercontent.com/trusted-programming/mate/${GITHUB_REF##*/}/scripts/counters.sh
          bash counters.sh before

      - name: prepare repository for dylint
        working-directory: ./${{ matrix.project }}
        run: |
          curl -o prepare_repo.sh https://raw.githubusercontent.com/trusted-programming/mate/${GITHUB_REF##*/}/scripts/prepare_repo.sh
          bash prepare_repo.sh

      - name: Lint fix (run 5 times)
        working-directory: ./${{ matrix.project }}
        continue-on-error: true
        run: |
          for i in {1..5}; do
            cargo dylint --all --workspace --fix -- --allow-dirty --allow-no-vcs --broken-code --lib
          done

      - name: cargo check
        working-directory: ./${{ matrix.project }}
        run: cargo check

      - name: git diff for .rs files
        if: always()
        working-directory: ./${{ matrix.project }}
        run: git diff -- '*.rs'

      - name: count occurrences after
        if: always()
        working-directory: ./${{ matrix.project }}
        run: bash counters.sh after

      - name: Calculate and print differences
        if: always()
        run: |
          echo "For loop count before: $for_loop_count_before"
          echo "For loop count after: $for_loop_count_after"
          echo "For loop count difference: $((for_loop_count_after - for_loop_count_before))"
          echo ""
          echo "Iter count before: $iter_count_before"
          echo "Iter count after: $iter_count_after"
          echo "Iter count difference: $((iter_count_after - iter_count_before))"
          echo ""
          echo "Iter mut count before: $iter_mut_count_before"
          echo "Iter mut count after: $iter_mut_count_after"
          echo "Iter mut count difference: $((iter_mut_count_after - iter_mut_count_before))"
          echo ""
          echo "Into iter count before: $into_iter_count_before"
          echo "Into iter count after: $into_iter_count_after"
          echo "Into iter count difference: $((into_iter_count_after - into_iter_count_before))"
          echo ""
          general_iter_count_before=$((iter_count_before + iter_mut_count_before + into_iter_count_before))
          general_iter_count_after=$((iter_count_after + iter_mut_count_after + into_iter_count_after))
          echo "Total .iter*() count before: $general_iter_count_before"
          echo "Total .iter*() count after: $general_iter_count_after"
          echo "Total .iter*() count difference: $((general_iter_count_after - general_iter_count_before))"
          echo ""
          echo "Par iter count before: $par_iter_count_before"
          echo "Par iter count after: $par_iter_count_after"
          echo "Par iter count difference: $((par_iter_count_after - par_iter_count_before))"
          echo ""
          echo "Into par iter count before: $into_par_iter_count_before"
          echo "Into par iter count after: $into_par_iter_count_after"
          echo "Into par iter count difference: $((into_par_iter_count_after - into_par_iter_count_before))"
          echo ""
          echo "Par iter mut count before: $par_iter_mut_count_before"
          echo "Par iter mut count after: $par_iter_mut_count_after"
          echo "Par iter mut count difference: $((par_iter_mut_count_after - par_iter_mut_count_before))"
          echo ""
          par_iter_total_count_before=$((par_iter_count_before + into_par_iter_count_before + par_iter_mut_count_before))
          par_iter_total_count_after=$((par_iter_count_after + into_par_iter_count_after + par_iter_mut_count_after))
          echo "Total .par_iter*() count before: $par_iter_total_count_before"
          echo "Total .par_iter*() count after: $par_iter_total_count_after"
          echo "Total .par_iter*() count difference: $((par_iter_total_count_after - par_iter_total_count_before))"
          echo ""
          echo "TOTAL OVERVIEW OF RESULTS"
          echo "For loop count difference: $((for_loop_count_after - for_loop_count_before))"
          echo "Total .iter*() count difference: $((general_iter_count_after - general_iter_count_before))"
          echo "Total .par_iter*() count difference: $((par_iter_total_count_after - par_iter_total_count_before))"
