error: sequential fold
  --> $DIR/par_fold_simple.rs:15:12
   |
LL |       sum += numbers.iter().map(|&num| num).fold(0, |mut sum, v| {
   |  ____________^
LL | |         sum += v;
LL | |         sum
LL | |     });
   | |______^
   |
   = note: `-D warn-par-fold-simple` implied by `-D warnings`
   = help: to override `-D warnings` add `#[allow(warn_par_fold_simple)]`
help: try using a parallel fold on the iterator
   |
LL |     sum += numbers.par_iter().map(|&num| num).reduce(|| 0, |mut sum, v| {
   |                    ~~~~~~~~                   ~~~~~~ ~~~~

error: sequential fold
  --> $DIR/par_fold_simple.rs:26:12
   |
LL |       data = numbers.iter().fold(data, |mut data, &num| {
   |  ____________^
LL | |         data.push(num * 3);
LL | |         data
LL | |     });
   | |______^
   |
   = note: `-D warn-par-fold-vec` implied by `-D warnings`
   = help: to override `-D warnings` add `#[allow(warn_par_fold_vec)]`
help: try using a parallel fold on the iterator
   |
LL ~     data = { data.extend(numbers.par_iter().fold(|| Vec::new(), |mut data, &num| {
LL +         data.push(num * 3);
LL +         data
LL ~     }).reduce(|| Vec::new(), |mut a, b| { a.extend(b); a })); data };
   |

error: sequential fold
  --> $DIR/par_fold_simple.rs:39:12
   |
LL |       data = numbers.iter().fold(data, |mut data, &num| {
   |  ____________^
LL | |         data.insert(num, num.to_string());
LL | |         data
LL | |     });
   | |______^
   |
   = note: `-D warn-par-fold-hashmap` implied by `-D warnings`
   = help: to override `-D warnings` add `#[allow(warn_par_fold_hashmap)]`
help: try using a parallel fold on the iterator
   |
LL ~     data = { data.extend(numbers.par_iter().fold(|| HashMap::new(), |mut data, &num| {
LL +         data.insert(num, num.to_string());
LL +         data
LL ~     }).reduce(|| HashMap::new(), |mut a, b| { a.extend(b); a })); data };
   |

error: aborting due to 3 previous errors

